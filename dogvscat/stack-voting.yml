version: '3.7'

x-default-opts:
  &default-opts
  logging:
    options:
      max-size: "1m"
  # driver: "gelf"
  # options:
  #   gelf-address: "udp://127.0.0.1:5000"

services:

  redis:
    <<: *default-opts
    image: redis:alpine
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - frontend
    deploy:
      endpoint_mode: dnsrr

  db:
    <<: *default-opts
    image: postgres:9.6
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - backend
    deploy:
      endpoint_mode: dnsrr

  vote:
    <<: *default-opts
    image: bretfisher/examplevotingapp_vote
    networks:
      - frontend
      - proxy
    deploy:
      replicas: 2
      labels:
        traefik.http.routers.vote.rule: Host(`vote.dogvs.cat`)
        traefik.http.routers.vote.entryPoints: websecure
        traefik.http.routers.vote.service: vote
        traefik.http.services.vote.loadbalancer.server.port: 80

  result:
    <<: *default-opts
    image: bretfisher/examplevotingapp_result
    networks:
      - backend
      - proxy
    deploy:
      replicas: 2
      labels:
        traefik.http.routers.result.rule: Host(`result.dogvs.cat`)
        traefik.http.routers.result.entryPoints: websecure
        traefik.http.routers.result.service: result
        traefik.http.services.result.loadbalancer.server.port: 80
        traefik.http.services.result.loadbalancer.sticky: "true"

  worker:
    <<: *default-opts
    image: bretfisher/examplevotingapp_worker:java
    networks:
      - frontend
      - backend
    deploy:
      replicas: 2
      labels:
        traefik.enable: "true"

networks:
  frontend: {}
  backend: {}
  proxy:
    external: true

volumes:
  db-data:
    driver: ${DOCKER_VOL_DRIVER:-local}
    # for example set DOCKER_VOL_DRIVER="rexray/dobs"
    driver_opts:
      size: 1
  redis-data:
    driver: ${DOCKER_VOL_DRIVER:-local}
    # for example set DOCKER_VOL_DRIVER="rexray/dobs"
    driver_opts:
      size: 1

